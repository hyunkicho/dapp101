<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>DAO 페이지</title>
    <!-- 필요한 CSS 파일들을 추가합니다 -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    />
  </head>
  <body>
    <!-- 메인 내용 부분 -->
    <main>
      <section class="container mt-4">
        <div class="row justify-content-center">
          <div class="col-lg-6">
            <h1 class="text-center mb-4">DAO 안건 제안하기</h1>
            <p class="text-center mb-4">
              원하는 정책을 등록해 주세요!
            </p>
            <form id="tokenForm">
              <div class="mb-3">
                <label for="addressFromWallet" class="form-label"
                  >지갑주소</label
                >
                <input
                  type="text"
                  class="form-control"
                  placeholder="ENTER TOKEN NAME"
                  id="addressFromWallet"
                  readonly
                />
              </div>
              <div class="mb-3">
                <label for="inputEthAmount" class="form-label"
                  >제안할 사안</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="proposal-input"
                  placeholder="DAO에 제안할 안건을 추가해주세요"
                />

                <div class="mb-3">
                  <button class="btn btn-primary" type="button" id="proposalbtn">
                    제안하기
                  </button>
                </div>
              <label for="inputEthAmount" class="form-label"
                >투표권을 위임할 주소</label
              >
              <input
                type="text"
                class="form-control"
                id="delegate-address"
                placeholder="투표권을 위임할 주소를 선택해 주세요"
              />

              <div class="mb-3">
                <button class="btn btn-primary" type="button" id="delegate">
                  위임하기
                </button>
              </div>
              </div>
              <br>
                <span>투표 가능 수 : </span>
                <span class="text-primary" id="weigth"></span>
              </dr>
              <div class="mb-3">
                <button class="btn btn-primary" type="button" id="check-vote">
                  나의 투표 가능 수 체크
                </button>
              </div>
              <div class="mb-3">
                <button class="btn btn-primary" type="button" id="eventbtn_proposalId">
                  proposal 아이디 조회
                </button>
              </div>
            </form>
          </div>
          <div class="mb-3">
          </div>
        </div>
      </section>
    </main>
    <div class="mt-5 mb-3" id="jsGrid"></div>

    <script src="src/abi/constant.js"></script>
    <script src="javascripts/crypto.js"></script>
    <script src="javascripts/jsgrid.js"></script>
    <script src="src/abi/MyERC721.js"></script>
    <script src="src/abi/MyGovernor.js"></script>
    <script src="src/utils/noExponents.js"></script>
    <script
      src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js"
      type="application/javascript"
    ></script>
    <!-- 필요한 JavaScript 파일들을 추가합니다 -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <link
      type="text/css"
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css"
    />
    <link
      type="text/css"
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css"
    />

    <script
      type="text/javascript"
      src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"
    ></script>

<script>
    // 1초마다 updateBlock() 함수를 실행시킨다.

  $(document).ready(async function () {
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner();
    let abi_governor = JSON.parse(JSON.stringify(MYGOVERNOR.abi));
    const governor = new ethers.Contract(GOVERNOR, abi_governor, signer);
    let abi_erc721 = JSON.parse(JSON.stringify(MYERC721.abi));
    const erc721Token = new ethers.Contract(ERC721, abi_erc721, signer);
    const accounts = await ethereum.request({
      method: "eth_requestAccounts",
    });
    //기본값은 자기 자신에게 위임하도록
    $("#delegate-address").val(accounts[0]);
    //checksum address 로 비교해야 한다.
    const accountChecksum = ethers.utils.getAddress(accounts[0]);
    const owner = await governor.owner();
    console.log("owner is : ", owner);
    if (owner == accountChecksum) {
      console.log(" is owner");
    } else {
      console.log("not owner");
      $("#withdraw").addClass("collapse");
      $("#eventbtn_withdraw").addClass("collapse");
    }

    $("#check-vote").click(async function (event) {
      const weight = await erc721Token.getVotes(accounts[0]);
      console.log(weight)
      $("#weigth").text(weight);
    })

    $("#proposalbtn").click(async function (event) {
      event.preventDefault();
      // changeTokenURICalldata = erc721Token.interface.encodeFunctionData("transfer", ["newuri"]);
      const proposalExplain = $("#proposal-input").val();
      governorCalldata =
        governor.interface.encodeFunctionData("propose",[
        [GOVERNOR],
        [0],
        ['0x'],
        proposalExplain
        ]);
      let data = ethereum
        .request({
          method: "eth_sendTransaction",
          params: [
            {
              from: accounts[0],
              to: GOVERNOR,
              value: "0",
              data: governorCalldata,
            },
          ],
        })
        //TODO 트랜잭션이 완료되었다고 띄우면서 트랜잭션 해시 보여주기
        .then((txHash) => alert(txHash))
        .catch((error) => console.error(error));
    });



    $("#delegate").click(async function (event) {
      event.preventDefault();
      const delegate_address = $("#delegate-address").val();
      console.log("delegate-address >>", delegate_address);
      // changeTokenURICalldata = erc721Token.interface.encodeFunctionData("transfer", ["newuri"]);
      delegatingCall = erc721Token.interface.encodeFunctionData("delegate",[delegate_address]);
      let data = ethereum
        .request({
          method: "eth_sendTransaction",
          params: [
            {
              from: accounts[0],
              to: ERC721,
              value: "0",
              data: delegatingCall,
            },
          ],
        })
        //TODO 트랜잭션이 완료되었다고 띄우면서 트랜잭션 해시 보여주기
        .then((txHash) => alert(txHash))
        .catch((error) => console.error(error));
    })

    $("#proposalbtn").click(async function (event) {
      event.preventDefault();
      // changeTokenURICalldata = erc721Token.interface.encodeFunctionData("transfer", ["newuri"]);
      const proposalExplain = $("#proposal-input").val();
      console.log("proposalExplain >>", proposalExplain);
      governorCalldata =
        governor.interface.encodeFunctionData("propose",[
        [ERC721],
        [0],
        ['0x'],
        'proposalExplain'
        ]);
      let data = ethereum
        .request({
          method: "eth_sendTransaction",
          params: [
            {
              from: accounts[0],
              to: GOVERNOR,
              value: "0",
              data: governorCalldata,
            },
          ],
        })
        //TODO 트랜잭션이 완료되었다고 띄우면서 트랜잭션 해시 보여주기
        .then((txHash) => alert(txHash))
        .catch((error) => console.error(error));
    });

    $("#addressFromWallet").val(accounts[0]);

    $("#eventbtn_proposalId").click(async function (event) {
          event.preventDefault();
          let data = await pushProposalId(governor, accounts[0], provider, abi_governor);
          $("#jsGrid").jsGrid({
            width: "100%",
            height: "auto",
            sorting: true,
            paging: true,
            data: data,
            fields: [
              { name: "proposalId", type: "text", width: 250 },
              { name: "txhash", type: "text", width: 300 },
            ],
          });
        });
  });
</script>
</body>
</html>
