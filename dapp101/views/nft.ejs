<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>NFT sales tutorial</title>

    <!-- Font Awesome icons (free version)-->
    <script
      src="https://use.fontawesome.com/releases/v6.1.0/js/all.js"
      crossorigin="anonymous"
    ></script>
    <!-- Simple line icons-->
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/simple-line-icons/2.5.5/css/simple-line-icons.min.css"
      rel="stylesheet"
    />
    <!-- Google fonts-->
    <link
      href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,700,300italic,400italic,700italic"
      rel="stylesheet"
      type="text/css"
    />
    <!-- Core theme CSS (includes Bootstrap)-->
    <link href="stylesheets/styles.css" rel="stylesheet" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.3/font/bootstrap-icons.css"
    />
    <link
      type="text/css"
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.css"
    />
    <link
      type="text/css"
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid-theme.min.css"
    />
    <script
      src="https://code.jquery.com/jquery-3.6.3.min.js"
      integrity="sha256-pvPw+upLPUjgMXY0G+8O0xUf+/Im1MZjXxxgOcBQBXU="
      crossorigin="anonymous"
    ></script>
    <script
      type="text/javascript"
      src="https://cdnjs.cloudflare.com/ajax/libs/jsgrid/1.5.3/jsgrid.min.js"
    ></script>
  </head>
  <body>
    <!-- <div class="container-fluid justify-content-md-center">
      <div class="row"> -->

    <div class="container">
      <div class="m-0 row justify-content-md-center">
        <div class="col-sm-6 col-md-4">
          <img
            class="mt-3 img-fluid"
            id="nft-image"
            alt="nft이미지 원하는거 넣으시면 됩니다"
          />
          <div class="col-md-12">
            <div class="mt-1 accordion-item">
              <h2 class="accordion-header" id="panelsStayOpen-headingOne">
                <button
                  class="accordion-button"
                  type="button"
                  data-bs-toggle="collapse"
                  data-bs-target="#panelsStayOpen-collapseOne"
                  aria-expanded="true"
                  aria-controls="panelsStayOpen-collapseOne"
                >
                  Description
                </button>
              </h2>
              <div
                id="panelsStayOpen-collapseOne"
                class="accordion-collapse collapse show"
                aria-labelledby="panelsStayOpen-headingOne"
              >
                <div class="accordion-body" id="attributes_accordion"></div>
              </div>
            </div>
          </div>
        </div>
        <div class="mt-0 col-sm-6 col-md-4">
          <p class="mt-3 mb-0 fs-4">NFT</p>
          <div class="row">
            <div class="col-md-12">
              <p class="fs-1 fw-bolder" id="token_name"></p>
            </div>
          </div>
          <div class="row">
            <div class="col-md-5">
              <!-- <p class="fs-5">Owned by</p> -->
              <span>Owned by</span>
              <span class="text-primary" id="nft-owner"></span>
            </div>
            <!-- <div class="col-md-6">
              <span><i class="bi bi-eye-fill"></i> 723 Views</span>
            </div> -->
            <!-- <div class="col-md-6"></div> -->
          </div>
          <div class="mt-3 row">
            <div class="mb-3 col-md-12">
              <p class="fs-4 fw-bold col-md-6">Current Price is</p>
              <h2><i class="bi bi-diamond-half" id="current-price"> </i></h2>
            </div>
            <div class="mb-3 col-md-12">
              <p class="fs-4 fw-bold col-md-6">Next token ID</p>
              <h2><i class="bi bi-diamond-half" id="next-mint"> </i></h2>
            </div>
          </div>

          <button type="button" class="m-1 btn btn-secondary btn-lg" id="approve-token">
            Approve ERC20 Token
          </button>

          <button type="button" class="m-1 btn btn-secondary btn-lg" id="buy-nft">
            BUY NOW !!!
          </button>
         
          <button type="button" class="m-1 btn btn-secondary btn-lg" id="eventbtn_minted">
            Show event
          </button>

          <div class="mb-3">
            <label for="inputEthAmount" class="form-label">바꿀 nft 가격</label>
            <input
              type="text"
              class="form-control"
              id="nft-price"
              placeholder="NFT PRICE"
            />
          </div>

          <button type="button" class="m-1 btn btn-secondary btn-lg" id="set-price">
            Set Price
          </button>
    
          <div class="row">
            <div class="col-7">
              <form id="token-form">
              <div class="form-group row m-1">
                <div class="col-9 p-0">
                  <input type="text" class="form-control Readonly" id="token-id" name="tokenId" placeholder=" Enter other NFT ID">
                </div>
                <div class="col-3 pl-1">
                  <button type="button" class="btn btn-primary" id="search"><i class="bi bi-search"></i></button>
                </div>
              </div>
            </form>
            </div>
          </div>
       
      </div>
      <div class="m-0 row" style>
        <div class="mt-5 mb-3" id="jsGrid"></div>
        <!-- <div class="col-md-4" style="text-align: center"> -->

        <div class="col-md-6"></div>
      </div>
    </div>
    <!-- Bootstrap core JS-->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="src/abi/constant.js"></script>
    <script src="javascripts/crypto.js"></script>
    <script src="javascripts/jsgrid.js"></script>
    <script src="src/abi/MyERC20.js"></script>
    <script src="src/abi/MyERC721.js"></script>
    <script src="src/utils/noExponents.js"></script>
    <script
      src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js"
      type="application/javascript"
    ></script>
    <script>
      function getTokenMetaData(tokenId) {
        try{
          if((tokenId < 1) || (tokenId > 100)) {
            alert("token ID should be 1~100!"); 
          }else {
            $.ajax({
              type: "get",
              url: "nft/nft_metadata",
              data: {
                tokenId: tokenId,
              },
              dataType: "json",
            }).done(function (json) {
              console.log("json success", json);
              $("#nft-image").attr("src", json.image);
              $("#token_name").text(json.name);
              $("#attributes_accordion").empty();
              for (let i = 0; i < json.attributes.length; i++) {
                $("#attributes_accordion").append(
                  `<p id="attributes"> ${json.attributes[i].trait_type}  :  ${json.attributes[i].value} </p>`
                );
              }
            });
          }
        } catch (err){
          console.log("error", err);
        }
      }
      let tokenId = $("#token-id").val() || 1;
      let owner;
      $(document).ready(async function () {    
          getTokenMetaData(tokenId);
          const provider = new ethers.providers.Web3Provider(window.ethereum);
          const signer = provider.getSigner();
          let abi = JSON.parse(JSON.stringify(MYERC721.abi));
          const erc721Token = new ethers.Contract(ERC721, abi, signer);
          const accounts = await ethereum.request({
            method: "eth_requestAccounts",
          });
          try {
            owner = await erc721Token.ownerOf(tokenId);
            console.log("owner is :", owner);
            $("#nft-owner").text(owner);
          } catch (error) {
            $("#nft-owner").text("not minted");
          }     
          const _tokenIdTracker = await erc721Token._tokenIdTracker();
          let tobeMintedTokenId = _tokenIdTracker.toString();
          $("#next-mint").text(tobeMintedTokenId);
          console.log($("#next-mint").val());

          $("#token-id").val(tobeMintedTokenId);
          console.log($("#token-id").val());
          const nftPrice = await erc721Token.getNftPrice();
          const displayNftPrice = nftPrice.toString()/(10**18);
          $("#current-price").text(displayNftPrice);
          //checksum address 로 비교해야 한다.
          const accountChecksum = ethers.utils.getAddress(accounts[0]);

          $("#approve-token").click(async function (event) {
          event.preventDefault();
          const hex_value = parseInt(nftPrice).toString(16);
          let erc20abi = JSON.parse(JSON.stringify(MYERC20.abi));
          const erc20Token = new ethers.Contract(ERC20, erc20abi, signer);
          //최대값으로 approve 받기
          const infinite = ethers.utils.parseUnits(
          "115792089237316195423570985008687907853269984665640564039457584007913129639935",
          0);

          approveCalldata = erc20Token.interface.encodeFunctionData("approve",[ERC721,infinite])
          let data = ethereum
            .request({
              method: "eth_sendTransaction",
              params: [
                {
                  from: accounts[0],
                  to: ERC20,
                  value: '0',
                  data: approveCalldata,
                },
              ],
            })
            .then((txHash) => console.log(txHash))
            .catch((error) => console.error(error));
        });
        $("#buy-nft").click(async function (event) {
          const estimation = await erc721Token.estimateGas.mintWithToken();
          console.log("estimation : ", estimation);
          alert(`you are buying nft ID ${tobeMintedTokenId} check it before you mint`)
          mintCalldata = erc721Token.interface.encodeFunctionData("mintWithToken");
          let data = ethereum
            .request({
              method: "eth_sendTransaction",
              params: [
                {
                  from: accounts[0],
                  to: ERC721,
                  value: '0',
                  data: mintCalldata,
                },
              ],
            })
            .then((txHash) => console.log(txHash))
            .catch((error) => console.error(error));

            try {
            owner = await erc721Token.ownerOf(tokenId);
              $("#nft-owner").text(owner);
            } catch (error) {
              $("#nft-owner").text("not minted");
            }         
          });

          // contract owner 인지 체크 후 관리자 함수 표시
          const contractOwner = await erc721Token.ownerOf(tokenId);
          if (contractOwner == accountChecksum) {
            console.log(" is owner");
          } else {
            console.log("not owner");
            $("#set-price").addClass("collapse");
            $("#nft-price").addClass("collapse");
          }

        $("#search").click(async function (event) {
          event.preventDefault();
          tokenId = $("#token-id").val();
          try{
            owner = await erc721Token.ownerOf(tokenId);
            $("#nft-owner").text(owner);
          } catch(err) {
            console.log("err is :", err);
            $("#nft-owner").text("not minted");
          }
          getTokenMetaData(tokenId);
        });


        $("#eventbtn_minted").click(async function (event) {
          event.preventDefault();
          let data = await pushNFTmint(erc721Token, accounts, provider, abi);

          $("#jsGrid").jsGrid({
            width: "100%",
            height: "auto",
            sorting: true,
            paging: true,
            data: data,
            fields: [
              { name: "from", type: "text", width: 250 },
              { name: "to", type: "text", width: 250 },
              { name: "tokenId", type: "text", width: 50 },
              { name: "txhash", type: "text", width: 300 },
            ],
          });
        });

        $("#set-price").click(async function (event) {
          event.preventDefault();
          let price = $("#nft-price").val()
          console.log("price is >", price);
          console.log("price is >", price*10**18);
          setNftPriceCalldata = erc721Token.interface.encodeFunctionData("setNftPrice",[(price*10**18).toString()]);
          await ethereum
            .request({
              method: "eth_sendTransaction",
              params: [
                {
                  from: accounts[0],
                  to: ERC721,
                  value: '0',
                  data: setNftPriceCalldata,
                },
              ],
            })
            .catch((error) => console.error(error));
        })
      });

    </script>
  </body>
</html>